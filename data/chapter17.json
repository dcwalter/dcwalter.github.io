{
"198" : "class SmartTurtle(Turtle):\n\n\tdef drawSquare(self):\n\t\tfor i in range(0,4):\n\t\t\tself.turnRight()\n\t\t\tself.forward()\n",
"199" : "class SmartTurtle(Turtle):\n\n\tdef drawSquare(self,width=100):\n\t\tfor i in range(0,4):\n\t\t\tself.turnRight()\n\t\t\tself.forward(width)\n",
"200" : "import random\nclass ConfusedTurtle(Turtle):\n\t def forward(self,num):\n\t\t Turtle.forward(self,int(num*random.random()))\n\t def turn(self,num):\n\t\t Turtle.turn(self,int(num*random.random()))\n",
"201" : "def chase():\n\t# Set up the four turtles\n\tearth = World()\n\tal = Turtle(earth)\n\tbo = Turtle(earth)\n\tcy = Turtle(earth)\n\tdi = Turtle(earth)\n\tal.penUp()\n\tal.moveTo(10,10)\n\tal.penDown()\n\tbo.penUp()\n\tbo.moveTo(10,400)\n\tbo.penDown()\n\tcy.penUp()\n\tcy.moveTo(400,10)\n\tcy.penDown()\n\tdi.penUp()\n\tdi.moveTo(400,400)\n\tdi.penDown()\n\t# Now, chase for 300 steps\n\tfor i in range(0,300):\n\t\tchaseTurtle(al,cy)\n\t\tchaseTurtle(cy,di)\n\t\tchaseTurtle(di,bo)\n\t\tchaseTurtle(bo,al)\n\ndef chaseTurtle(t1,t2):\n\tt1.turnToFace(t2)\n\tt1.forward(4)\n",
"202" : "def spinAPicture(apic):\n\tcanvas = makeEmptyPicture(640,480)\n\tted = Turtle(canvas)\n\tfor i in range(0,360):\n\t\tted.drop(apic)\n\t\tted.forward(10)\n\t\tted.turn(20)\n\treturn canvas\n",
"203" : "from time import sleep\n\ndef dance():\n\tmakesquare()\n\t\ndef makesquare():\n\tw = makeWorld()\n\tevenlist = []\n\toddlist = []\n\tfor turtles in range(10):\n\t\tt = makeTurtle(w)\n\t\tt.turn(turtles*36)\n\t\tif turtles % 2 == 0:\n\t\t\tevenlist = evenlist + [t]\n\t\telse:\n\t\t\toddlist = oddlist + [t]\n\tfor times in range(20):\n\t for sides in range(5):\n\t\tif times % 2 == 0:\n\t\t\tfor t in evenlist:\n\t\t\t\tt.forward(100)\n\t\t\t\tt.turn(90)\n\t\telse:\n\t\t\t for t in oddlist:\n\t\t\t\tt.forward(100)\n\t\t\t\tt.turn(72)\n\t\tsleep(0.2)\n",
"204" : "def triangle(turtle,size):\n\tfor sides in range(3):\n\t\tforward(turtle,size)\n\t\tturn(turtle,120)\n",
"205" : "def nestedTri(t,size):\n\tif size < 10:\n\t\treturn\n\tfor sides in range(3):\n\t\tnestedTri(t,size/2)\n\t\tforward(t,size)\n\t\tturn(t,120)\n",
"206" : "def cornerTri(t,size):\n\tif size < 10:\n\t\treturn\n\tfor sides in range(3):\n\t\tforward(t,size)\n\t\tcornerTri(t,size/2)\n\t\tturn(t,120)\n",
"207" : "def playSlideShow():\n\tpic = makePicture(getMediaPath(\"barbara.jpg\"))\n\tsound = makeSound(getMediaPath(\"bassoon-c4.wav\"))\n\tshow(pic)\n\tblockingPlay(sound)\n\tpic = makePicture(getMediaPath(\"beach.jpg\"))\n\tsound = makeSound(getMediaPath(\"bassoon-e4.wav\"))\n\tshow(pic)\n\tblockingPlay(sound)\n\tpic = makePicture(getMediaPath(\"church.jpg\"))\n\tsound = makeSound(getMediaPath(\"bassoon-g4.wav\"))\n\tshow(pic)\n\tblockingPlay(sound)\n\tpic = makePicture(getMediaPath(\"jungle2.jpg\"))\n\tsound = makeSound(getMediaPath(\"bassoon-c4.wav\"))\n\tshow(pic)\n\tblockingPlay(sound)\n",
"208" : "class Slide:\n\tdef __init__(self, pictureFile,soundFile):\n\t\tself.picture = makePicture(pictureFile)\n\t\tself.sound = makeSound(soundFile)\n\n\tdef show(self):\n\t\tshow(self.picture)\n\t\tblockingPlay(self.sound)\n",
"209" : "def playSlideShow2():\n\tpictF = getMediaPath(\"barbara.jpg\")\n\tsoundF = getMediaPath(\"bassoon-c4.wav\")\n\tslide1 = Slide(pictF,soundF)\n\tpictF = getMediaPath(\"beach.jpg\")\n\tsoundF = getMediaPath(\"bassoon-e4.wav\")\n\tslide2 = Slide(pictF,soundF)\n\tpictF = getMediaPath(\"church.jpg\")\n\tsoundF = getMediaPath(\"bassoon-g4.wav\")\n\tslide3 = Slide(pictF,soundF)\n\tpictF = getMediaPath(\"jungle2.jpg\")\n\tsoundF = getMediaPath(\"bassoon-c4.wav\")\n\tslide4 = Slide(pictF,soundF)\n\tslide1.show()\n\tslide2.show()\n\tslide3.show()\n\tslide4.show()\n",
"210" : "def showSlide(aSlide):\n\taSlide.show()\n\ndef playSlideShow3():\n\tpictF = getMediaPath(\"barbara.jpg\")\n\tsoundF = getMediaPath(\"bassoon-c4.wav\")\n\tslide1 = Slide(pictF,soundF )\n\tpictF = getMediaPath(\"beach.jpg\")\n\tsoundF = getMediaPath(\"bassoon-e4.wav\")\n\tslide2 = Slide(pictF,soundF)\n\tpictF = getMediaPath(\"church.jpg\")\n\tsoundF = getMediaPath(\"bassoon-g4.wav\")\n\tslide3 = Slide(pictF,soundF)\n\tpictF = getMediaPath(\"jungle2.jpg\")\n\tsoundF = getMediaPath(\"bassoon-c4.wav\")\n\tslide4 = Slide(pictF,soundF)\n\n\tmap(showSlide,[slide1,slide2,slide3,slide4])\n",
"211" : "class Slide:\n\tdef __init__(self, pictureFile,soundFile):\n\t\tself.setPicture(makePicture(pictureFile))\n\t\tself.setSound(makeSound(soundFile))\n\n\tdef getPicture(self):\n\t\treturn self.picture\n\tdef getSound(self):\n\t\treturn self.sound\n\n\tdef setPicture(self,newPicture):\n\t\tself.picture = newPicture\n\tdef setSound(self,newSound):\n\t\tself.sound = newSound\n\n\tdef show(self):\n\t\tshow(self.getPicture())\n\t\tblockingPlay(self.getSound())\n",
"212" : "class MyPicture(Picture):\n\tdef makeSunset(self):\n\t\tfor p in getPixels(self):\n\t\t\tp.setBlue(int(p.getBlue()*0.7))\n\t\t\tp.setGreen(int (p.getGreen()*0.7))\n",
"213" : "class MySound(Sound):\n\tdef reverse(self):\n\t\ttarget = Sound(self.getLength())\n\t\tsourceIndex = self.getLength() - 1\n\t\tfor targetIndex in range(0,target.getLength()):\n\t\t\tsourceValue = self.getSampleValueAt(sourceIndex)\n\t\t\ttarget.setSampleValueAt(targetIndex,sourceValue)\n\t\t\tsourceIndex = sourceIndex - 1\n\t\treturn target\n"
}